{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["pathPreset0","config","fe","ip_apiserver","port_apiserver","pathPreset1","useStyles","makeStyles","theme","root","minWidth","marginTop","image","textAlign","media","height","paddingTop","avatar","width","spacing","avatarSm","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","App","classes","React","useState","clothSize","setClothSize","pose","setPose","setImage","images","setImages","loading","setLoading","useCustom","setUseCustom","preview","setPreview","timespan","setTimespan","totalspan","setTotalspan","logs","setLogs","ws","useRef","time_start","Date","now","loglist","logger","args","console","log","current","push","join","initWs","cb","WebSocket","onmessage","msg","time_end","data","result","JSON","parse","ok","timestamps","Object","keys","reduce","acc","item","startsWith","parseInt","error","sort","a","b","forEach","total","filter","length","timespans","shift","toISOString","split","map","stringify","onclose","event","onopen","onerror","useEffect","close","handleSubmit","formData","FormData","append","fetch","method","body","res","json","readyState","OPEN","send","id","className","CssBaseline","Container","maxWidth","Card","CardHeader","Avatar","src","title","subheader","CardContent","Box","display","flexWrap","FormControl","formControl","disabled","InputLabel","Select","labelId","value","onChange","target","MenuItem","FormHelperText","FormLabel","component","RadioGroup","aria-label","name","mr","FormControlLabel","control","Radio","label","variant","alt","Input","type","files","URL","createObjectURL","CardActions","Button","size","color","onClick","CircularProgress","Accordion","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","flexDirection","index","my","p","whiteSpace","bgcolor","key","alignItems","LinearProgress","toFixed","Link","href","rel","CardMedia","gutterBottom","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d9106472.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport config from \"./config.json\";\r\n\r\nimport \"fontsource-roboto\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst pathPreset0 = `http://${config.fe.ip_apiserver}:${config.fe.port_apiserver}/preset/preset0.jpg`;\r\nconst pathPreset1 = `http://${config.fe.ip_apiserver}:${config.fe.port_apiserver}/preset/preset1.jpg`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: 275,\r\n    marginTop: 10,\r\n  },\r\n  image: {\r\n    textAlign: \"center\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20),\r\n  },\r\n  avatarSm: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [clothSize, setClothSize] = React.useState(\"m\");\r\n  const [pose, setPose] = React.useState(\"a\");\r\n  const [image, setImage] = React.useState();\r\n  const [images, setImages] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [useCustom, setUseCustom] = React.useState(\"preset0\");\r\n  const [preview, setPreview] = React.useState();\r\n  const [timespan, setTimespan] = React.useState([]);\r\n  const [totalspan, setTotalspan] = React.useState(0);\r\n  const [logs, setLogs] = React.useState(\"\");\r\n\r\n  const ws = useRef(null);\r\n  const time_start = useRef(Date.now());\r\n  const loglist = useRef([]);\r\n\r\n  const logger = (...args) => {\r\n    console.log(...args);\r\n    loglist.current.push(args.join(\" \"));\r\n  };\r\n  const initWs = (cb) => {\r\n    logger(\"ws connecting\");\r\n\r\n    ws.current = new WebSocket(\r\n      `ws://${config.fe.ip_apiserver}:${config.fe.port_apiserver}`\r\n    );\r\n    ws.current.onmessage = (msg) => {\r\n      const time_end = Date.now();\r\n      logger(msg.data);\r\n      setLoading(false);\r\n\r\n      try {\r\n        const result = JSON.parse(msg.data);\r\n        result.time_start == null && (result.time_start = time_start.current);\r\n        result.time_end = time_end;\r\n\r\n        if (result.ok) {\r\n          setImages(result.data);\r\n\r\n          // set time span\r\n          let timestamps = Object.keys(result).reduce((acc, item) => {\r\n            try {\r\n              if (item.startsWith(\"time_\"))\r\n                acc.push([\r\n                  item,\r\n                  result[item] !== \"\" ? parseInt(result[item]) : 0,\r\n                ]);\r\n            } catch (error) {\r\n              console.log(\"parseInt error\", error);\r\n            }\r\n\r\n            return acc;\r\n          }, []);\r\n          timestamps.sort((a, b) => a[1] - b[1]);\r\n          timestamps.forEach((item) => {\r\n            logger(\"[timestamps]\", item[0], item[1]);\r\n          });\r\n          timestamps = timestamps.filter((item) => {\r\n            return item[1] !== 0;\r\n          });\r\n          const total = timestamps[timestamps.length - 1][1] - timestamps[0][1];\r\n          logger(\"[total]\", total);\r\n          const timespans = [];\r\n          timestamps.reduce((acc, item) => {\r\n            timespans.push(item[1] - acc);\r\n            return item[1];\r\n          }, timestamps[0]);\r\n          timespans.shift();\r\n          timespans.forEach((item) => {\r\n            logger(new Date(item).toISOString().split(\"T\")[1], item, \"ms\");\r\n          });\r\n          setTimespan(timespans.map((item) => [item, (item / total) * 100]));\r\n          setTotalspan(total);\r\n        } else {\r\n          logger(\"[ok]\", result.ok, result.data);\r\n        }\r\n      } catch (error) {\r\n        logger(\"[error]\", JSON.stringify(error, null, 2));\r\n      }\r\n\r\n      setLogs(loglist.current);\r\n    };\r\n    ws.current.onclose = (event) => {\r\n      logger(\"ws on close\");\r\n    };\r\n    ws.current.onopen = (event) => {\r\n      logger(\"ws on open\");\r\n      cb && cb();\r\n    };\r\n    ws.current.onerror = (event) => {\r\n      logger(\"on error\");\r\n      logger(JSON.stringify(event, null, 2));\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    initWs();\r\n\r\n    return () => ws.current.close();\r\n  }, []);\r\n\r\n  const handleChangeClothSize = (event) => {\r\n    console.log(\"handle\", \"cloth size\", event.target.value);\r\n    setClothSize(event.target.value);\r\n  };\r\n  const handleChangePose = (event) => {\r\n    console.log(\"handle\", \"pose\", event.target.value);\r\n    setPose(event.target.value);\r\n  };\r\n  const handleChangeImage = (event) => {\r\n    console.log(\"handle\", \"file\");\r\n    console.log(event.target.files[0]);\r\n    setImage(event.target.files[0]);\r\n    setPreview(URL.createObjectURL(event.target.files[0]));\r\n  };\r\n  const handleChangeUseCustom = (event) => {\r\n    console.log(\"handle\", \"use custom\");\r\n    console.log(event.target.value);\r\n    setUseCustom(event.target.value);\r\n\r\n    if (useCustom !== \"custom\") {\r\n      setPreview(null);\r\n    }\r\n  };\r\n  const handleSubmit = async () => {\r\n    time_start.current = Date.now();\r\n    loglist.current = [];\r\n    setLogs([]);\r\n    setImages([]);\r\n    setTotalspan(0);\r\n    setTimespan([]);\r\n    setLoading(true);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"size\", clothSize);\r\n    formData.append(\"pose\", pose);\r\n\r\n    if (useCustom === \"custom\") formData.append(\"image\", image);\r\n\r\n    formData.append(\"face\", useCustom);\r\n    formData.append(\"time_start\", time_start.current);\r\n    logger(\"handle\", \"submit\");\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `http://${config.fe.ip_apiserver}:${config.fe.port_apiserver}/api/v1/simple`,\r\n        {\r\n          method: \"POST\",\r\n          // mode: \"cors\",\r\n          body: formData,\r\n        }\r\n      );\r\n\r\n      if (res.ok) {\r\n        const result = await res.json();\r\n        logger(\"[response]\", JSON.stringify(result, null, 2));\r\n\r\n        if (result.ok) {\r\n          if (ws.current.readyState !== WebSocket.OPEN) {\r\n            logger(\"ws not open\");\r\n            ws.current.close();\r\n            initWs(() => {\r\n              ws.current.send(JSON.stringify({ id: result.id }));\r\n            });\r\n          } else {\r\n            ws.current.send(JSON.stringify({ id: result.id }));\r\n          }\r\n        }\r\n      } else {\r\n        logger(\"res.ok\", res.ok);\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      logger(\"[error]\", JSON.stringify(error, null, 2));\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <Card className={classes.root}>\r\n          <CardHeader\r\n            avatar={\r\n              <Avatar\r\n                className={classes.avatarSm}\r\n                src={\r\n                  useCustom === \"custom\"\r\n                    ? preview\r\n                    : useCustom === \"preset0\"\r\n                    ? pathPreset0\r\n                    : pathPreset1\r\n                }\r\n              ></Avatar>\r\n            }\r\n            title=\"Options\"\r\n            subheader=\"Select options\"\r\n          />\r\n          <CardContent>\r\n            <Box display=\"flex\" flexWrap=\"wrap\">\r\n              <Box width=\"50%\">\r\n                <FormControl className={classes.formControl} id=\"size\" disabled>\r\n                  <InputLabel id=\"label-cloth-size\">Cloth size</InputLabel>\r\n                  <Select\r\n                    labelId=\"label-cloth-size\"\r\n                    id=\"select-cloth-size\"\r\n                    value={clothSize}\r\n                    onChange={handleChangeClothSize}\r\n                  >\r\n                    <MenuItem value={\"m\"}>M</MenuItem>\r\n                    <MenuItem value={\"l\"}>L</MenuItem>\r\n                    <MenuItem value={\"xl\"}>XL</MenuItem>\r\n                  </Select>\r\n                  <FormHelperText>Cloth size : M/L/XL</FormHelperText>\r\n                </FormControl>\r\n              </Box>\r\n              <Box width=\"50%\">\r\n                <FormControl className={classes.formControl} id=\"pose\" disabled>\r\n                  <InputLabel id=\"label-pose\">Pose</InputLabel>\r\n                  <Select\r\n                    labelId=\"label-pose\"\r\n                    id=\"select-pose\"\r\n                    value={pose}\r\n                    onChange={handleChangePose}\r\n                  >\r\n                    <MenuItem value={\"a\"}>A pose</MenuItem>\r\n                    <MenuItem value={\"t\"}>T pose</MenuItem>\r\n                  </Select>\r\n                  <FormHelperText>Pose : T pose/A Pose</FormHelperText>\r\n                </FormControl>\r\n              </Box>\r\n            </Box>\r\n          </CardContent>\r\n          <CardContent>\r\n            <FormControl className={classes.formControl} id=\"file\">\r\n              <FormLabel component=\"legend\">Face</FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"gender\"\r\n                name=\"gender1\"\r\n                value={useCustom}\r\n                onChange={handleChangeUseCustom}\r\n              >\r\n                <Box display=\"flex\" flexWrap=\"wrap\">\r\n                  <Box mr={2}>\r\n                    <FormControlLabel\r\n                      value=\"preset0\"\r\n                      control={<Radio />}\r\n                      label=\"Preset 0\"\r\n                    />\r\n                    <Avatar\r\n                      variant={useCustom === \"preset0\" ? \"rounded\" : \"circle\"}\r\n                      alt=\"preset0\"\r\n                      src={pathPreset0}\r\n                      className={classes.avatar}\r\n                    />\r\n                  </Box>\r\n                  <Box mr={2}>\r\n                    <FormControlLabel\r\n                      value=\"preset1\"\r\n                      control={<Radio />}\r\n                      label=\"Preset 1\"\r\n                    />\r\n                    <Avatar\r\n                      variant={useCustom === \"preset1\" ? \"rounded\" : \"circle\"}\r\n                      alt=\"preset0\"\r\n                      src={pathPreset1}\r\n                      className={classes.avatar}\r\n                    />\r\n                  </Box>\r\n                  <Box mr={2}>\r\n                    <FormControlLabel\r\n                      value=\"custom\"\r\n                      control={<Radio />}\r\n                      label=\"Custom\"\r\n                    />\r\n                    <Box>\r\n                      <Input\r\n                        type=\"file\"\r\n                        name=\"image\"\r\n                        onChange={handleChangeImage}\r\n                        disabled={useCustom !== \"custom\"}\r\n                      />\r\n                    </Box>\r\n                  </Box>\r\n                </Box>\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              width=\"100%\"\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              onClick={handleSubmit}\r\n              disabled={(useCustom === \"custom\" && !image) || loading}\r\n            >\r\n              Submit\r\n            </Button>\r\n            {loading && <CircularProgress />}\r\n          </CardActions>\r\n        </Card>\r\n        <Card className={classes.root}>\r\n          <Accordion>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel-content\"\r\n              id=\"panel-header\"\r\n            >\r\n              <Typography className={classes.heading}>Log {}</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Box flexDirection=\"column\">\r\n                {logs &&\r\n                  logs.length &&\r\n                  logs.map((item, index) => {\r\n                    return (\r\n                      <Box\r\n                        width=\"90%\"\r\n                        // component=\"div\"\r\n                        my={1}\r\n                        p={1}\r\n                        whiteSpace=\"normal\"\r\n                        bgcolor=\"text.disabled\"\r\n                        color=\"background.paper\"\r\n                        key={index}\r\n                      >\r\n                        {item}\r\n                      </Box>\r\n                    );\r\n                  })}\r\n              </Box>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Card>\r\n        {timespan && timespan.length !== 0 && (\r\n          <Card className={classes.root}>\r\n            <CardHeader\r\n              title=\"Profiling\"\r\n              subheader={`Total : ${totalspan}ms`}\r\n            />\r\n            <CardContent>\r\n              {timespan.map((item, index) => {\r\n                return (\r\n                  <Box display=\"flex\" alignItems=\"center\" key={index}>\r\n                    <Box width=\"100%\" mr={1}>\r\n                      <LinearProgress variant=\"determinate\" value={item[1]} />\r\n                    </Box>\r\n                    <Box minWidth={150}>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {`${item[1].toFixed(2)}%, ${item[0]}ms`}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n        {images.map((item, index) => {\r\n          return (\r\n            <Card className={`${classes.root} ${classes.image}`} key={index}>\r\n              <Link\r\n                href={`http://${config.fe.ip_apiserver}:${config.fe.port_apiserver}/${item}`}\r\n                target=\"_blank\"\r\n                rel=\"noopener\"\r\n                color=\"inherit\"\r\n              >\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={`http://${config.fe.ip_apiserver}:${config.fe.port_apiserver}/${item}`}\r\n                  title={item}\r\n                ></CardMedia>\r\n              </Link>\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {item}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        })}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}