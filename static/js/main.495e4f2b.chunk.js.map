{"version":3,"sources":["StoreTimes.js","StoreImages.js","StoreLasttime.js","AvatarList.js","App.js","serviceWorker.js","Store.js","index.js"],"names":["ContextTimes","React","createContext","ProviderTimes","children","useState","times","setTimes","Provider","value","ContextImages","ProviderImages","images","setImages","ContextLasttime","ProviderLasttime","lasttime","setLasttime","useStyles","makeStyles","theme","root","minWidth","marginTop","list","width","backgroundColor","palette","background","paper","position","overflow","maxHeight","image","textAlign","media","height","paddingTop","avatar","spacing","avatarSm","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","AvatarList","classes","loading","setLoading","avatars","setAvatars","selectedIndex","setSelectedIndex","useContext","handleSubmit","a","fetch","config","fe","ip_apiserver","port_apiserver","method","body","JSON","stringify","isAsync","name","time_start","Date","now","headers","res","ok","json","result","console","log","data","useEffect","Array","isArray","fetchAvatarGet","Card","className","CardHeader","Avatar","title","subheader","CardContent","List","component","map","item","index","ListItem","button","key","selected","onClick","event","handleListItemClick","ListItemAvatar","ListItemText","primary","secondary","time","toLocaleString","size","CardActions","Button","color","CircularProgress","BorderLinearProgress","withStyles","borderRadius","colorPrimary","grey","type","bar","LinearProgress","pathPreset0","pathPreset1","textTimespan","App","clothSize","setClothSize","pose","setPose","setImage","useCustom","setUseCustom","preview","setPreview","timespan","setTimespan","totalspan","setTotalspan","ws","useRef","onJobFinished","time_end","current","error","initWs","cb","WebSocket","onmessage","msg","parse","onclose","onopen","onerror","close","formData","FormData","append","send","id","readyState","OPEN","timestamps","Object","keys","reduce","acc","startsWith","push","parseInt","total","spans","length","sort","b","forEach","filter","timespans","shift","toISOString","split","CssBaseline","Container","maxWidth","src","Box","display","flexWrap","FormControl","formControl","disabled","InputLabel","Select","labelId","onChange","target","MenuItem","FormHelperText","FormLabel","RadioGroup","aria-label","mr","FormControlLabel","control","Radio","label","variant","alt","Input","files","URL","createObjectURL","alignItems","my","Typography","toFixed","url","Link","href","rel","CardMedia","gutterBottom","Boolean","window","location","hostname","match","StoreProvider","Index","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.495e4f2b.chunk.js","sourcesContent":["// ref\r\n// https://sg-choi.tistory.com/240\r\n// https://www.youtube.com/watch?v=6uBgda52yEo&feature=youtu.be\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst ContextTimes = React.createContext(0);\r\n\r\nconst ProviderTimes = ({ children }) => {\r\n  const [times, setTimes] = useState({});\r\n\r\n  return (\r\n    <ContextTimes.Provider value={{ times, setTimes }}>\r\n      {children}\r\n    </ContextTimes.Provider>\r\n  );\r\n};\r\n\r\nexport { ProviderTimes, ContextTimes };\r\n","// ref\r\n// https://sg-choi.tistory.com/240\r\n// https://www.youtube.com/watch?v=6uBgda52yEo&feature=youtu.be\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst ContextImages = React.createContext(0);\r\n\r\nconst ProviderImages = ({ children }) => {\r\n  const [images, setImages] = useState([]);\r\n\r\n  return (\r\n    <ContextImages.Provider value={{ images, setImages }}>\r\n      {children}\r\n    </ContextImages.Provider>\r\n  );\r\n};\r\n\r\nexport { ProviderImages, ContextImages };\r\n","// ref\r\n// https://sg-choi.tistory.com/240\r\n// https://www.youtube.com/watch?v=6uBgda52yEo&feature=youtu.be\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst ContextLasttime = React.createContext(0);\r\n\r\nconst ProviderLasttime = ({ children }) => {\r\n  const [lasttime, setLasttime] = useState(0);\r\n\r\n  return (\r\n    <ContextLasttime.Provider value={{ lasttime, setLasttime }}>\r\n      {children}\r\n    </ContextLasttime.Provider>\r\n  );\r\n};\r\n\r\nexport { ProviderLasttime, ContextLasttime };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport config from \"./config.json\";\r\nimport { ContextTimes } from \"./StoreTimes\";\r\nimport { ContextImages } from \"./StoreImages\";\r\nimport { ContextLasttime } from \"./StoreLasttime\";\r\n\r\nimport \"fontsource-roboto\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: 275,\r\n    marginTop: 10,\r\n  },\r\n  list: {\r\n    width: \"100%\",\r\n    // maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    position: \"relative\",\r\n    overflow: \"auto\",\r\n    maxHeight: 300,\r\n  },\r\n  image: {\r\n    textAlign: \"center\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20),\r\n  },\r\n  avatarSm: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nconst AvatarList = () => {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [avatars, setAvatars] = useState([]); // {name, time, size}\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n  const { setTimes } = React.useContext(ContextTimes);\r\n  const { setImages } = React.useContext(ContextImages);\r\n  const { lasttime } = React.useContext(ContextLasttime);\r\n\r\n  const handleListItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n  };\r\n  const handleSubmit = async () => {\r\n    setTimes({});\r\n    setImages([]);\r\n    setLoading(true);\r\n    const avatar = avatars[selectedIndex];\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `http://${config.fe.ip_apiserver}:${config.fe.port_apiserver}/api/v1/render`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            isAsync: false,\r\n            avatar: avatar.name,\r\n            time_start: Date.now(),\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (res.ok) {\r\n        const result = await res.json();\r\n        console.log(result);\r\n        setTimes(result);\r\n        setImages(result.data ? result.data : []);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAvatarGet = async () => {\r\n      try {\r\n        const res = await fetch(\r\n          `http://${config.fe.ip_apiserver}:${config.fe.port_apiserver}/api/v1/avatar`,\r\n          {\r\n            method: \"GET\",\r\n          }\r\n        );\r\n\r\n        if (res.ok) {\r\n          const result = await res.json();\r\n\r\n          if (result.ok) {\r\n            result.data &&\r\n              Array.isArray(result.data) &&\r\n              setAvatars(result.data);\r\n          }\r\n\r\n          console.log(\"avatar get\", result);\r\n        }\r\n      } catch (error) {\r\n        console.log(\"error\", error);\r\n      }\r\n    };\r\n\r\n    fetchAvatarGet();\r\n  }, [lasttime]);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={<Avatar className={classes.avatarSm}></Avatar>}\r\n        title=\"Avatars\"\r\n        subheader=\"Select avatar\"\r\n      />\r\n      <CardContent>\r\n        <List component=\"nav\" className={classes.list}>\r\n          {avatars.map((item, index) => {\r\n            return (\r\n              <ListItem\r\n                button\r\n                key={index}\r\n                selected={selectedIndex === index}\r\n                onClick={(event) => handleListItemClick(event, index)}\r\n              >\r\n                <ListItemAvatar>\r\n                  <Avatar></Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={item.name}\r\n                  secondary={`${new Date(item.time).toLocaleString()}, ${\r\n                    item.size\r\n                    // .toString()\r\n                    // .replace(\r\n                    //   /(?:^|\\G)(\\d{1,3})(?=(\\d{3})+(?:\\.\\d+)?$)/gi,\r\n                    //   \"$1,\"\r\n                    // )\r\n                  } bytes`}\r\n                />\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          width=\"100%\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          onClick={handleSubmit}\r\n        >\r\n          Start rendering\r\n        </Button>\r\n        {loading && <CircularProgress />}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AvatarList;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport config from \"./config.json\";\r\nimport AvatarList from \"./AvatarList\";\r\nimport { ContextTimes } from \"./StoreTimes\";\r\nimport { ContextImages } from \"./StoreImages\";\r\nimport { ContextLasttime } from \"./StoreLasttime\";\r\n\r\nimport \"fontsource-roboto\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor:\r\n      theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"#1a90ff\",\r\n  },\r\n}))(LinearProgress);\r\n\r\nconst pathPreset0 = `http://${config.fe.ip_apiserver}:${config.fe.port_apiserver}/preset/preset0.jpg`;\r\nconst pathPreset1 = `http://${config.fe.ip_apiserver}:${config.fe.port_apiserver}/preset/preset1.jpg`;\r\nconst textTimespan = [\r\n  \"from client request to AvatarEngine reception\",\r\n  \"AvatarEngine processing\",\r\n  \"from AvatarEngine sending data to FittingEngine reception\",\r\n  \"FittingEngine processing\",\r\n  \"from FittingEngine sending data to RenderEngine reception\",\r\n  \"RenderEngine processing\",\r\n  \"from RenderEngine sending data to REST API server reception\",\r\n  \"from REST API server sending data to cleitn reception\",\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: 275,\r\n    marginTop: 10,\r\n  },\r\n  image: {\r\n    textAlign: \"center\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20),\r\n  },\r\n  avatarSm: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [clothSize, setClothSize] = React.useState(\"m\");\r\n  const [pose, setPose] = React.useState(\"a\");\r\n  const [image, setImage] = React.useState(); // custom avatar image\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [useCustom, setUseCustom] = React.useState(\"preset0\");\r\n  const [preview, setPreview] = React.useState();\r\n  const [timespan, setTimespan] = React.useState([]); // [x,y] array. x: key, y: miliseconds\r\n  const [totalspan, setTotalspan] = React.useState(0);\r\n  const { times, setTimes } = React.useContext(ContextTimes);\r\n  const { images, setImages } = React.useContext(ContextImages);\r\n  const { setLasttime } = React.useContext(ContextLasttime);\r\n\r\n  const ws = useRef(null);\r\n  const time_start = useRef(Date.now());\r\n  const onJobFinished = (result) => {\r\n    setLasttime(Date.now());\r\n\r\n    try {\r\n      setLoading(false);\r\n      const time_end = Date.now();\r\n      result.time_start == null && (result.time_start = time_start.current);\r\n      result.time_end = time_end;\r\n\r\n      if (result.ok) {\r\n        setTimes(result);\r\n        setImages(result.data ? result.data : []);\r\n      } else {\r\n        console.log(\"[ok]\", result.ok, result.data);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"[error]\", error);\r\n    }\r\n  };\r\n\r\n  const initWs = (cb) => {\r\n    console.log(\"ws connecting\");\r\n\r\n    ws.current = new WebSocket(\r\n      `ws://${config.fe.ip_apiserver}:${config.fe.port_apiserver}`\r\n    );\r\n    ws.current.onmessage = (msg) => {\r\n      try {\r\n        const result = JSON.parse(msg.data);\r\n        onJobFinished(result);\r\n      } catch (error) {\r\n        console.log(\"error\", error);\r\n      }\r\n    };\r\n    ws.current.onclose = (event) => {\r\n      console.log(\"ws on close\");\r\n    };\r\n    ws.current.onopen = (event) => {\r\n      console.log(\"ws on open\");\r\n      cb && cb();\r\n    };\r\n    ws.current.onerror = (event) => {\r\n      console.log(\"on error\", event);\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => ws.current && ws.current.close();\r\n  }, []);\r\n\r\n  const handleChangeClothSize = (event) => {\r\n    console.log(\"handle\", \"cloth size\", event.target.value);\r\n    setClothSize(event.target.value);\r\n  };\r\n  const handleChangePose = (event) => {\r\n    console.log(\"handle\", \"pose\", event.target.value);\r\n    setPose(event.target.value);\r\n  };\r\n  const handleChangeImage = (event) => {\r\n    console.log(\"handle\", \"file\");\r\n    console.log(event.target.files[0]);\r\n    setImage(event.target.files[0]);\r\n    setPreview(URL.createObjectURL(event.target.files[0]));\r\n  };\r\n  const handleChangeUseCustom = (event) => {\r\n    console.log(\"handle\", \"use custom\");\r\n    console.log(event.target.value);\r\n    setUseCustom(event.target.value);\r\n\r\n    if (useCustom !== \"custom\") {\r\n      setPreview(null);\r\n    }\r\n  };\r\n  const handleSubmit = async () => {\r\n    time_start.current = Date.now();\r\n    setTotalspan(0);\r\n    setTimespan([]);\r\n    setImages([]);\r\n    setLoading(true);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"size\", clothSize);\r\n    formData.append(\"pose\", pose);\r\n\r\n    if (useCustom === \"custom\") formData.append(\"image\", image);\r\n\r\n    formData.append(\"face\", useCustom);\r\n    formData.append(\"time_start\", time_start.current);\r\n    formData.append(\"isAsync\", false);\r\n    console.log(\"handle\", \"submit\");\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `http://${config.fe.ip_apiserver}:${config.fe.port_apiserver}/api/v1/avatar`,\r\n        {\r\n          method: \"POST\",\r\n          // mode: \"cors\",\r\n          body: formData,\r\n        }\r\n      );\r\n\r\n      if (res.ok) {\r\n        const result = await res.json();\r\n        console.log(\"[response]\", result);\r\n\r\n        if (result.ok) {\r\n          if (result.isAsync === \"true\" || result.isAsync === true) {\r\n            if (ws.current === null) {\r\n              console.log(\"ws null\");\r\n              initWs(() => {\r\n                ws.current.send(JSON.stringify({ id: result.id }));\r\n              });\r\n            } else if (ws.current.readyState !== WebSocket.OPEN) {\r\n              console.log(\"ws not open\");\r\n              ws.current.close();\r\n              initWs(() => {\r\n                ws.current.send(JSON.stringify({ id: result.id }));\r\n              });\r\n            } else {\r\n              ws.current.send(JSON.stringify({ id: result.id }));\r\n            }\r\n          } else if (result.isAsync === \"false\" || result.isAsync === false) {\r\n            onJobFinished(result);\r\n          } else {\r\n            console.log(\"no isAsync\");\r\n          }\r\n        }\r\n      } else {\r\n        console.log(\"res not ok\");\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"[error]\", error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // set time span\r\n    let timestamps = Object.keys(times).reduce((acc, item) => {\r\n      try {\r\n        if (item.startsWith(\"time_\"))\r\n          acc.push([item, times[item] !== \"\" ? parseInt(times[item]) : 0]);\r\n      } catch (error) {\r\n        console.log(\"parseInt error\", error);\r\n      }\r\n\r\n      return acc;\r\n    }, []);\r\n\r\n    let total = 0;\r\n    let spans = [];\r\n\r\n    if (timestamps.length !== 0) {\r\n      timestamps.sort((a, b) => a[1] - b[1]);\r\n      timestamps.forEach((item) => {\r\n        console.log(\"[timestamps]\", item[0], item[1]);\r\n      });\r\n      timestamps = timestamps.filter((item) => {\r\n        return item[1] !== 0;\r\n      });\r\n      total = timestamps[timestamps.length - 1][1] - timestamps[0][1];\r\n      console.log(\"[total]\", total);\r\n      const timespans = [];\r\n      timestamps.reduce((acc, item) => {\r\n        timespans.push(item[1] - acc);\r\n        return item[1];\r\n      }, timestamps[0]);\r\n      timespans.shift();\r\n      timespans.forEach((item) => {\r\n        console.log(new Date(item).toISOString().split(\"T\")[1], item, \"ms\");\r\n      });\r\n\r\n      spans = timespans.map((item) => [item, (item / total) * 100]);\r\n    }\r\n\r\n    setTotalspan(total);\r\n    setTimespan(spans);\r\n  }, [times]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <Card className={classes.root}>\r\n          <CardHeader\r\n            avatar={\r\n              <Avatar\r\n                className={classes.avatarSm}\r\n                src={\r\n                  useCustom === \"custom\"\r\n                    ? preview\r\n                    : useCustom === \"preset0\"\r\n                    ? pathPreset0\r\n                    : pathPreset1\r\n                }\r\n              ></Avatar>\r\n            }\r\n            title=\"Options\"\r\n            subheader=\"Select options\"\r\n          />\r\n          <CardContent>\r\n            <Box display=\"flex\" flexWrap=\"wrap\">\r\n              <Box width=\"50%\">\r\n                <FormControl className={classes.formControl} id=\"size\" disabled>\r\n                  <InputLabel id=\"label-cloth-size\">Cloth size</InputLabel>\r\n                  <Select\r\n                    labelId=\"label-cloth-size\"\r\n                    id=\"select-cloth-size\"\r\n                    value={clothSize}\r\n                    onChange={handleChangeClothSize}\r\n                  >\r\n                    <MenuItem value={\"m\"}>M</MenuItem>\r\n                    <MenuItem value={\"l\"}>L</MenuItem>\r\n                    <MenuItem value={\"xl\"}>XL</MenuItem>\r\n                  </Select>\r\n                  <FormHelperText>Cloth size : M/L/XL</FormHelperText>\r\n                </FormControl>\r\n              </Box>\r\n              <Box width=\"50%\">\r\n                <FormControl className={classes.formControl} id=\"pose\" disabled>\r\n                  <InputLabel id=\"label-pose\">Pose</InputLabel>\r\n                  <Select\r\n                    labelId=\"label-pose\"\r\n                    id=\"select-pose\"\r\n                    value={pose}\r\n                    onChange={handleChangePose}\r\n                  >\r\n                    <MenuItem value={\"a\"}>A pose</MenuItem>\r\n                    <MenuItem value={\"t\"}>T pose</MenuItem>\r\n                  </Select>\r\n                  <FormHelperText>Pose : T pose/A Pose</FormHelperText>\r\n                </FormControl>\r\n              </Box>\r\n            </Box>\r\n          </CardContent>\r\n          <CardContent>\r\n            <FormControl className={classes.formControl} id=\"file\">\r\n              <FormLabel component=\"legend\">Face</FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"gender\"\r\n                name=\"gender1\"\r\n                value={useCustom}\r\n                onChange={handleChangeUseCustom}\r\n              >\r\n                <Box display=\"flex\" flexWrap=\"wrap\">\r\n                  <Box mr={2}>\r\n                    <FormControlLabel\r\n                      value=\"preset0\"\r\n                      control={<Radio />}\r\n                      label=\"Preset 0\"\r\n                    />\r\n                    <Avatar\r\n                      variant={useCustom === \"preset0\" ? \"rounded\" : \"circle\"}\r\n                      alt=\"preset0\"\r\n                      src={pathPreset0}\r\n                      className={classes.avatar}\r\n                    />\r\n                  </Box>\r\n                  <Box mr={2}>\r\n                    <FormControlLabel\r\n                      value=\"preset1\"\r\n                      control={<Radio />}\r\n                      label=\"Preset 1\"\r\n                    />\r\n                    <Avatar\r\n                      variant={useCustom === \"preset1\" ? \"rounded\" : \"circle\"}\r\n                      alt=\"preset0\"\r\n                      src={pathPreset1}\r\n                      className={classes.avatar}\r\n                    />\r\n                  </Box>\r\n                  <Box mr={2}>\r\n                    <FormControlLabel\r\n                      value=\"custom\"\r\n                      control={<Radio />}\r\n                      label=\"Custom\"\r\n                    />\r\n                    <Box>\r\n                      <Input\r\n                        type=\"file\"\r\n                        name=\"image\"\r\n                        onChange={handleChangeImage}\r\n                        disabled={useCustom !== \"custom\"}\r\n                      />\r\n                    </Box>\r\n                  </Box>\r\n                </Box>\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              width=\"100%\"\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              onClick={handleSubmit}\r\n              disabled={(useCustom === \"custom\" && !image) || loading}\r\n            >\r\n              Make avatar\r\n            </Button>\r\n            {loading && <CircularProgress />}\r\n          </CardActions>\r\n        </Card>\r\n        <AvatarList />\r\n        {timespan && timespan.length !== 0 && (\r\n          <Card className={classes.root}>\r\n            <CardHeader\r\n              title=\"Profiling\"\r\n              subheader={`Total : ${totalspan}ms`}\r\n            />\r\n            <CardContent>\r\n              {timespan.map((item, index) => {\r\n                return (\r\n                  <Box display=\"flex\" alignItems=\"center\" key={index} my={1}>\r\n                    <Box width=\"100%\" mr={1}>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {textTimespan.length > index && textTimespan[index]}\r\n                      </Typography>\r\n                      <BorderLinearProgress\r\n                        variant=\"determinate\"\r\n                        value={item[1]}\r\n                      />\r\n                    </Box>\r\n                    <Box minWidth={150}>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {`${item[1].toFixed(2)}%, ${item[0]}ms`}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n        {images.map((item, index) => {\r\n          const url = `http://${config.fe.ip_apiserver}:${config.fe.port_apiserver}/${item}`;\r\n          return (\r\n            <Card className={`${classes.root} ${classes.image}`} key={index}>\r\n              <Link href={url} target=\"_blank\" rel=\"noopener\" color=\"inherit\">\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={url}\r\n                  title={item}\r\n                ></CardMedia>\r\n              </Link>\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {item}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        })}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// ref\r\n// https://sg-choi.tistory.com/240\r\n// https://www.youtube.com/watch?v=6uBgda52yEo&feature=youtu.be\r\n\r\nimport React from \"react\";\r\nimport { ProviderTimes } from \"./StoreTimes\";\r\nimport { ProviderImages } from \"./StoreImages\";\r\nimport { ProviderLasttime } from \"./StoreLasttime\";\r\n\r\nconst StoreProvider = ({ children }) => (\r\n  <ProviderLasttime>\r\n    <ProviderImages>\r\n      <ProviderTimes>{children}</ProviderTimes>\r\n    </ProviderImages>\r\n  </ProviderLasttime>\r\n);\r\nexport { StoreProvider };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { StoreProvider } from \"./Store\";\n\nconst Index = () => (\n  <StoreProvider>\n    <App />\n  </StoreProvider>\n);\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Index />,\n  // </React.StrictMode>\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}